##
# Current allow: Google Bot, Yandex Bot, Facebookexternalhit, 
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
#############################################---1---
# HTTP2 Plugin has a bug that makes fastcgi cache size > max_size in config. So has to disable.
# --------------------------------------------------
server {
    #listen 443 ssl http2 default_server;
    listen 443 ssl default_server;
    #listen [::]:443 ssl http2 default_server;
    listen [::]:443 ssl default_server;

	   #Apply limit
	   limit_req zone=mylimit burst=20 nodelay;

       #server_name beta.tuatphukien.com;
       #root /var/www/html/beta.tuatphukien.com;

	   server_name beta.tuatphukien.com;
       root /var/www/html/tuatphukien.com;
		#keepalive_timeout   70;
		ssl_certificate     /etc/letsencrypt/live/tuatphukien.com/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/tuatphukien.com/privkey.pem;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
        index index.php index.html;

        location / {
		   try_files $uri $uri/ /index.php?q=$uri&$args;
        }
		location ~ \.php$ {
			set $skip_cache 0;

			# Block some bot
			# Allow: facebookexternalhit/1.1, Googlebot/2.1, bingbot/2.0, msnbot
			if ($http_user_agent ~* (serpstatbot|SemrushBot|AhrefsBot|MJ12bot|Crawler|Spider|CrawlDaddy|Java|WinHttp|HttpClient|urllib|Clickagy|SeznamBot|coccocbot|DotBot|proximic|FunWebProducts|AwarioSmartBot)) {
				return 304;
			}
			# Block login.php from outside-------
			set $isLoggingin 0;
			set $isUACorrect 0;
			#if ($request_uri ~* "/wp-login.php|/wp-admin|/wp-config.php|/*.php$|/*.sql$") {
			if ($request_uri ~* "/*.php$|/*.sql$|/wp-admin/|wp-.*.php") {
				set $isLoggingin 1;
			}
			#if ($http_user_agent !~* (LOI) ) {
			if ($http_user_agent !~* (Python-xmlrpc|Chrome/) ) {
				set $isUACorrect "${isLoggingin}0";
			}
			if ($isUACorrect = 10 ) {
				return 404;
			}
			# Prevent xmlrpc---------------------
			#set $isXMLRPCPosting 0;
			#set $isXMLRPCChecked 0;
			#if ($request_uri ~* "/xmlrpc.php") {
			#	set $isXMLRPCPosting 1;
			#}
			#if ($http_user_agent !~* (Python-xmlrpc) ) {
			#	set $isXMLRPCChecked "${isXMLRPCPosting}0";
			#}
			#if ($isXMLRPCChecked = 10 ) {
			#	return 404;
			#}

			# Not allow tag here
			if ($request_uri ~* "/tag/") {
				# set $skip_cache 0;
				return 404;
			}

			if ($request_method = POST) {
				set $skip_cache 1;
			}
			# The tilde instructs nginx to perform a case-sensitive regular expression match, instead of a straight string comparison
			if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl|rss)|/ads.txt") {
				set $skip_cache 1;
			}
			if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
				set $skip_cache 1;
			}
			#End of Nginx FastCGI Cache Configuration
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			include snippets/fastcgi-php.conf;
    	}

    	location ~ /\.ht {
        	deny all;
    	}

		location = /favicon.ico {
			try_files $uri =404;
			log_not_found off;
			access_log off;
		}

		# Cache static files for as long as possible
    	location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        	expires max;
        	log_not_found off;
        	access_log off;
    	}

}
##########################################################################################################---2
server {
		# remove HTTP2 due to bug
       listen 443 ssl;
       listen [::]:443 ssl;

	   #Apply limit
	   limit_req zone=mylimit burst=20 nodelay;

       server_name oraerr.com www.oraerr.com;
       root /var/www/html/oraerr.com;
		#keepalive_timeout   70;
		ssl_certificate     /etc/letsencrypt/live/oraerr.com/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/oraerr.com/privkey.pem;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
       	index index.html index.php;
       	
		location / {
			#Since you are using Nginx as your web-server, please configure the following rewrite rules in case you get 404 Not Found errors for your sitemap:
			# TO USE STATIC SITEMAP -> DISABLE THOSE LINES
			# TO USE DYNAMIC SITEMAP -> ENABLE THOSE LINES
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;
			
               	#try_files $uri $uri/ =404;
			
			#block some country
			#if ($allowed_country = no) {
			#	return 502;
			#}

			#try php
			try_files $uri $uri/ /index.php?q=$uri&$args;
       	}
		   
		location ~ \.php$ {
        	set $skip_cache 0;

			# Block some bot
			# Allow: facebookexternalhit/1.1, Googlebot/2.1, bingbot/2.0, msnbot
			if ($http_user_agent ~* (serpstatbot|SemrushBot|AhrefsBot|MJ12bot|Crawler|Spider|CrawlDaddy|Java|WinHttp|HttpClient|urllib|Clickagy|SeznamBot|coccocbot|DotBot|proximic|FunWebProducts|AwarioSmartBot)) {
				return 304;
			}
			# Block login.php from outside-------
			set $isLoggingin 0;
			set $isUACorrect 0;
			#if ($request_uri ~* "/wp-login.php|/wp-admin|/wp-config.php|/*.php$|/*.sql$") {
			if ($request_uri ~* "/*.php$|/*.sql$|/wp-admin/|wp-.*.php") {
				set $isLoggingin 1;
			}
			#if ($http_user_agent !~* (LOI) ) {
			if ($http_user_agent !~* (Python-xmlrpc|Chrome/) ) {
				set $isUACorrect "${isLoggingin}0";
			}
			if ($isUACorrect = 10 ) {
				return 404;
			}
			# Prevent xmlrpc---------------------
			#set $isXMLRPCPosting 0;
			#set $isXMLRPCChecked 0;
			#if ($request_uri ~* "/xmlrpc.php") {
			#	set $isXMLRPCPosting 1;
			#}
			#if ($http_user_agent !~* (Python-xmlrpc) ) {
			#	set $isXMLRPCChecked "${isXMLRPCPosting}0";
			#}
			#if ($isXMLRPCChecked = 10 ) {
			#	return 404;
			#}

			# Not allow tag here
			if ($request_uri ~* "/tag/") {
				# set $skip_cache 0;
				return 404;
			}

			if ($request_method = POST) {
				set $skip_cache 1;
			}
			# The tilde instructs nginx to perform a case-sensitive regular expression match, instead of a straight string comparison
			if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl|rss)|/ads.txt") {
				set $skip_cache 1;
			}
			if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
				set $skip_cache 1;
			}
			#End of Nginx FastCGI Cache Configuration
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			include snippets/fastcgi-php.conf;
    	}

    	location ~ /\.ht {
        	deny all;
    	}

		location = /favicon.ico {
			try_files $uri =404;
			log_not_found off;
			access_log off;
		}

		# Cache static files for as long as possible
    	location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        	expires max;
        	log_not_found off;
        	access_log off;
    	}
		
		# Processing sitemap.xml
    	
}
##################################################################################################################---3
server {
       listen 443 ssl;
       listen [::]:443 ssl;

	   #Apply limit
	   limit_req zone=mylimit burst=20 nodelay;

       server_name inneka.com www.inneka.com;
       root /var/www/html/inneka.com;
		#keepalive_timeout   70;
		ssl_certificate     /etc/letsencrypt/live/inneka.com/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/inneka.com/privkey.pem;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
       	index index.php index.html;
       	location / {
			#Since you are using Nginx as your web-server, please configure the following rewrite rules in case you get 404 Not Found errors for your sitemap:
			# TO USE STATIC SITEMAP -> DISABLE THOSE LINES
			# TO USE DYNAMIC SITEMAP -> ENABLE THOSE LINES
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.rss$ "/index.php?rss_sitemap=params=$2" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.rss.gz$ "/index.php?rss_sitemap=params=$2;zip=true" last;

			#try_files $uri $uri/ =404;
			#try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html $uri $uri/ /index.php?q=$uri&$args;
			
			#block some country
			#if ($allowed_country = no) {
			#	return 502;
			#}

			#try php
			try_files $uri $uri/ /index.php?q=$uri&$args;
       	}
		location ~ \.php$ {
			set $skip_cache 0;

			# Block some bot
			if ($http_user_agent ~* (serpstatbot|SemrushBot|AhrefsBot|MJ12bot|Crawler|Spider|CrawlDaddy|Java|WinHttp|HttpClient|urllib|Clickagy|SeznamBot|coccocbot|DotBot|proximic|FunWebProducts|AwarioSmartBot)) {
				return 304;
			}

			# Block login.php from outside-------
			set $isLoggingin 0;
			set $isUACorrect 0;
			if ($request_uri ~* "/*.php$|/*.sql$|/wp-admin/|wp-.*.php") {
			 	set $isLoggingin 1;
			}
			if ($http_user_agent !~* (Python-xmlrpc|Chrome/) ) {
			 	set $isUACorrect "${isLoggingin}0";
			}
			if ($isUACorrect = 10 ) {
			 	return 404;
			}
			# Prevent xmlrpc---------------------
			#set $isXMLRPCPosting 0;
			#set $isXMLRPCChecked 0;
			#if ($request_uri ~* "/xmlrpc.php") {
			#	set $isXMLRPCPosting 1;
			#}
			#if ($http_user_agent !~* (Python-xmlrpc) ) {
			#	set $isXMLRPCChecked "${isXMLRPCPosting}0";
			#}
			#if ($isXMLRPCChecked = 10 ) {
			#	return 404;
			#}

			# Not allow tag here
			if ($request_uri ~* "/tag/") {
				# set $skip_cache 0;
				return 404;
			}

			if ($request_method = POST) {
				set $skip_cache 1;
			}
			# The tilde instructs nginx to perform a case-sensitive regular expression match, instead of a straight string comparison
			if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl|rss)|/ads.txt") {
				set $skip_cache 1;
			}
			if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
				set $skip_cache 1;
			}
			#End of Nginx FastCGI Cache Configuration
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			include snippets/fastcgi-php.conf;
    	}

    	location ~ /\.ht {
        	deny all;
    	}

		location = /favicon.ico {
			try_files $uri =404;
			log_not_found off;
			access_log off;
		}

		# Cache static files for as long as possible
    	location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        	expires max;
        	log_not_found off;
        	access_log off;
    	}
}
#########################################################################################################---4
server {
       listen 443 ssl;
       listen [::]:443 ssl;

	   #Apply limit
	   limit_req zone=mylimit burst=20 nodelay;

       server_name config9.com www.config9.com;
       root /var/www/html/config9.com;
		#keepalive_timeout   70;
		ssl_certificate     /etc/letsencrypt/live/config9.com/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/config9.com/privkey.pem;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
       index index.php index.html;
       location / {
		   #Since you are using Nginx as your web-server, please configure the following rewrite rules in case you get 404 Not Found errors for your sitemap:
		   # TO USE STATIC SITEMAP -> DISABLE THOSE LINES
			# TO USE DYNAMIC SITEMAP -> ENABLE THOSE LINES
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;
			
			#try_files $uri $uri/ =404;
			#try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html $uri $uri/ /index.php?q=$uri&$args;
			#block some country
			#if ($allowed_country = no) {
			#	return 502;
			#}

			#try php
			try_files $uri $uri/ /index.php?q=$uri&$args;
       	}
		
		#PHP LOCATION
		location ~ \.php$ {
        	set $skip_cache 0;

			# Block some bot
			if ($http_user_agent ~* (serpstatbot|SemrushBot|AhrefsBot|MJ12bot|Crawler|Spider|CrawlDaddy|Java|WinHttp|HttpClient|urllib|Clickagy|SeznamBot|coccocbot|DotBot|proximic|FunWebProducts|AwarioSmartBot)) {
				return 304;
			}
			# Block login.php from outside-------
			set $isLoggingin 0;
			set $isUACorrect 0;
			#if ($request_uri ~* "/wp-login.php|/wp-admin|/wp-config.php|/*.php$|/*.sql$") {
			if ($request_uri ~* "/*.php$|/*.sql$|/wp-admin/|wp-.*.php") {
				set $isLoggingin 1;
			}
			if ($http_user_agent !~* (Python-xmlrpc|Chrome/) ) {
				set $isUACorrect "${isLoggingin}0";
			}
			if ($isUACorrect = 10 ) {
				return 404;
			}
			# Prevent xmlrpc---------------------
			#set $isXMLRPCPosting 0;
			#set $isXMLRPCChecked 0;
			#if ($request_uri ~* "/xmlrpc.php") {
			#	set $isXMLRPCPosting 1;
			#}
			#if ($http_user_agent !~* (Python-xmlrpc) ) {
			#	set $isXMLRPCChecked "${isXMLRPCPosting}0";
			#}
			#if ($isXMLRPCChecked = 10 ) {
			#	return 404;
			#}

			# Not allow tag here
			if ($request_uri ~* "/tag/") {
				# set $skip_cache 0;
				return 404;
			}

			if ($request_method = POST) {
				set $skip_cache 1;
			}
			# The tilde instructs nginx to perform a case-sensitive regular expression match, instead of a straight string comparison
			if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl|rss)|/ads.txt|/ip-address/") {
				set $skip_cache 1;
			}
			if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
				set $skip_cache 1;
			}
			#End of Nginx FastCGI Cache Configuration
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			include snippets/fastcgi-php.conf;
    	}

    	location ~ /\.ht {
        	deny all;
    	}

		location = /favicon.ico {
			try_files $uri =404;
			log_not_found off;
			access_log off;
		}

		# Cache static files for as long as possible
    	location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        	expires max;
        	log_not_found off;
        	access_log off;
    	}

		
}
###########################################################################################################---5
server {
       listen 443 ssl;
       listen [::]:443 ssl;

	   #Apply limit
	   limit_req zone=mylimit burst=20 nodelay;

       server_name bookziz.com www.bookziz.com;
       root /var/www/html/bookziz.com;

		#keepalive_timeout   70;
		ssl_certificate     /etc/letsencrypt/live/bookziz.com/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/bookziz.com/privkey.pem;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
       index index.php index.html;

       location / {
		   #Since you are using Nginx as your web-server, please configure the following rewrite rules in case you get 404 Not Found errors for your sitemap:
		   # TO USE STATIC SITEMAP -> DISABLE THOSE LINES
			# TO USE DYNAMIC SITEMAP -> ENABLE THOSE LINES
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;
			
               #try_files $uri $uri/ =404;
			   #try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html $uri $uri/ /index.php?q=$uri&$args;
			   try_files $uri $uri/ /index.php?q=$uri&$args;
       }
		location ~ \.php$ {
        	set $skip_cache 0;

			# Block some bot
			if ($http_user_agent ~* (serpstatbot|SemrushBot|AhrefsBot|MJ12bot|Crawler|Spider|CrawlDaddy|Java|WinHttp|HttpClient|urllib|Clickagy|SeznamBot|coccocbot|DotBot|proximic|FunWebProducts|AwarioSmartBot)) {
				return 304;
			}
			# Block login.php from outside-------
			set $isLoggingin 0;
			set $isUACorrect 0;
			#if ($request_uri ~* "/wp-login.php|/wp-admin|/wp-config.php|/*.php$|/*.sql$") {
			if ($request_uri ~* "/*.php$|/*.sql$|/wp-admin/|wp-.*.php") {
				set $isLoggingin 1;
			}
			if ($http_user_agent !~* (Python-xmlrpc|Chrome/) ) {
				set $isUACorrect "${isLoggingin}0";
			}
			if ($isUACorrect = 10 ) {
				return 404;
			}
			# Prevent xmlrpc---------------------
			#set $isXMLRPCPosting 0;
			#set $isXMLRPCChecked 0;
			#if ($request_uri ~* "/xmlrpc.php") {
			#	set $isXMLRPCPosting 1;
			#}
			#if ($http_user_agent !~* (Python-xmlrpc) ) {
			#	set $isXMLRPCChecked "${isXMLRPCPosting}0";
			#}
			#if ($isXMLRPCChecked = 10 ) {
			#	return 404;
			#}

			# Not allow tag here
			if ($request_uri ~* "/tag/") {
				# set $skip_cache 0;
				return 404;
			}

			if ($request_method = POST) {
				set $skip_cache 1;
			}
			# The tilde instructs nginx to perform a case-sensitive regular expression match, instead of a straight string comparison
			if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl|rss)|/ads.txt") {
				set $skip_cache 1;
			}
			if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
				set $skip_cache 1;
			}
			#End of Nginx FastCGI Cache Configuration
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			include snippets/fastcgi-php.conf;
    	}

    	location ~ /\.ht {
        	deny all;
    	}

		location = /favicon.ico {
			try_files $uri =404;
			log_not_found off;
			access_log off;
		}

		# Cache static files for as long as possible
    	location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        	expires max;
        	log_not_found off;
        	access_log off;
    	}

		location /status {
                stub_status;
        }
}
#######################################################################################################---6
server {
       listen 443 ssl;
       listen [::]:443 ssl;

	   #Apply limit
	   limit_req zone=mylimit burst=20 nodelay;

       server_name pes4fun.com www.pes4fun.com;
       root /var/www/html/pes4fun.com;
		#keepalive_timeout   70;
		ssl_certificate     /etc/letsencrypt/live/pes4fun.com/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/pes4fun.com/privkey.pem;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
       index index.php index.html;
       location / {
		   #Since you are using Nginx as your web-server, please configure the following rewrite rules in case you get 404 Not Found errors for your sitemap:
		   # TO USE STATIC SITEMAP -> DISABLE THOSE LINES
			# TO USE DYNAMIC SITEMAP -> ENABLE THOSE LINES
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;
			
               #try_files $uri $uri/ =404;
			   #try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html $uri $uri/ /index.php?q=$uri&$args;
			   try_files $uri $uri/ /index.php?q=$uri&$args;
       }
		location ~ \.php$ {
        	set $skip_cache 0;

			# Block some bot
			if ($http_user_agent ~* (serpstatbot|SemrushBot|AhrefsBot|MJ12bot|Crawler|Spider|CrawlDaddy|Java|WinHttp|HttpClient|urllib|Clickagy|SeznamBot|coccocbot|DotBot|proximic|FunWebProducts|AwarioSmartBot)) {
				return 304;
			}
			# Block login.php from outside-------
			set $isLoggingin 0;
			set $isUACorrect 0;
			#if ($request_uri ~* "/wp-login.php|/wp-admin|/wp-config.php|/*.php$|/*.sql$") {
			if ($request_uri ~* "/*.php$|/*.sql$|/wp-admin/|wp-.*.php") {
				set $isLoggingin 1;
			}
			#if ($http_user_agent !~* (LOI) ) {
			if ($http_user_agent !~* (Python-xmlrpc|Chrome/) ) {
				set $isUACorrect "${isLoggingin}0";
			}
			if ($isUACorrect = 10 ) {
				return 404;
			}
			# Prevent xmlrpc---------------------
			#set $isXMLRPCPosting 0;
			#set $isXMLRPCChecked 0;
			#if ($request_uri ~* "/xmlrpc.php") {
			#	set $isXMLRPCPosting 1;
			#}
			#if ($http_user_agent !~* (Python-xmlrpc) ) {
			#	set $isXMLRPCChecked "${isXMLRPCPosting}0";
			#}
			#if ($isXMLRPCChecked = 10 ) {
			#	return 404;
			#}

			# Not allow tag here
			if ($request_uri ~* "/tag/") {
				# set $skip_cache 0;
				return 404;
			}

			if ($request_method = POST) {
				set $skip_cache 1;
			}
			# The tilde instructs nginx to perform a case-sensitive regular expression match, instead of a straight string comparison
			if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl|rss)|/ads.txt") {
				set $skip_cache 1;
			}
			if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
				set $skip_cache 1;
			}
			#End of Nginx FastCGI Cache Configuration
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			include snippets/fastcgi-php.conf;
    	}

    	location ~ /\.ht {
        	deny all;
    	}

		location = /favicon.ico {
			try_files $uri =404;
			log_not_found off;
			access_log off;
		}

		# Cache static files for as long as possible
    	location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        	expires max;
        	log_not_found off;
        	access_log off;
    	}
}
##########################################################################################################---7---rebuild tuatphukien.com
server {
		# remove HTTP2 due to bug
    	listen 443 ssl;
       	listen [::]:443 ssl;
		#listen 80;
		#listen [::]:80;

	   #Apply limit
	   limit_req zone=mylimit burst=20 nodelay;

       server_name tuatphukien.com www.tuatphukien.com;
       root /var/www/html/tuatphukien.com;
		#keepalive_timeout   70;
		ssl_certificate     /etc/letsencrypt/live/tuatphukien.com/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/tuatphukien.com/privkey.pem;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
       	index index.html index.php;
       	
		location / {
			#Since you are using Nginx as your web-server, please configure the following rewrite rules in case you get 404 Not Found errors for your sitemap:
			# TO USE STATIC SITEMAP -> DISABLE THOSE LINES
			# TO USE DYNAMIC SITEMAP -> ENABLE THOSE LINES
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;
			
               	#try_files $uri $uri/ =404;
			#block some country
			#if ($allowed_country = no) {
			#	return 502;
			#}

			#try php
			try_files $uri $uri/ /index.php?q=$uri&$args;
       	}
		   
		location ~ \.php$ {
        	set $skip_cache 0;

			# Block some bot
			if ($http_user_agent ~* (serpstatbot|SemrushBot|AhrefsBot|MJ12bot|Crawler|Spider|CrawlDaddy|Java|WinHttp|HttpClient|urllib|Clickagy|SeznamBot|coccocbot|DotBot|proximic|FunWebProducts|AwarioSmartBot)) {
				return 304;
			}
			# Block login.php from outside-------
			set $isLoggingin 0;
			set $isUACorrect 0;
			#if ($request_uri ~* "/wp-login.php|/wp-admin|/wp-config.php|/*.php$|/*.sql$") {
			if ($request_uri ~* "/*.php$|/*.sql$|/wp-admin/|wp-.*.php") {
				set $isLoggingin 1;
			}
			#if ($http_user_agent !~* (LOI) ) {
			if ($http_user_agent !~* (Python-xmlrpc|Chrome/) ) {
				set $isUACorrect "${isLoggingin}0";
			}
			if ($isUACorrect = 10 ) {
				return 404;
			}
			# Prevent xmlrpc---------------------
			#set $isXMLRPCPosting 0;
			#set $isXMLRPCChecked 0;
			#if ($request_uri ~* "/xmlrpc.php") {
			#	set $isXMLRPCPosting 1;
			#}
			#if ($http_user_agent !~* (Python-xmlrpc) ) {
			#	set $isXMLRPCChecked "${isXMLRPCPosting}0";
			#}
			#if ($isXMLRPCChecked = 10 ) {
			#	return 404;
			#}

			# Not allow tag here
			if ($request_uri ~* "/tag/") {
				# set $skip_cache 0;
				return 404;
			}

			if ($request_method = POST) {
				set $skip_cache 1;
			}
			# The tilde instructs nginx to perform a case-sensitive regular expression match, instead of a straight string comparison
			if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl|rss)|/ads.txt|/ip-address/") {
				set $skip_cache 1;
			}
			if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
				set $skip_cache 1;
			}
			#End of Nginx FastCGI Cache Configuration
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			include snippets/fastcgi-php.conf;
    	}

    	location ~ /\.ht {
        	deny all;
    	}

		location = /favicon.ico {
			try_files $uri =404;
			log_not_found off;
			access_log off;
		}

		# Cache static files for as long as possible
    	location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        	expires max;
        	log_not_found off;
        	access_log off;
    	}
		
		# Processing sitemap.xml
    	
}
##########################################################################################################---8---loitools.com
server {
		# remove HTTP2 due to bug
    	listen 443 ssl;
       	listen [::]:443 ssl;
		#listen 80;
		#listen [::]:80;

	   #Apply limit
	   limit_req zone=mylimit burst=20 nodelay;

       server_name loitools.com www.loitools.com;
       root /var/www/html/loitools.com;
		#keepalive_timeout   70;
		ssl_certificate     /etc/letsencrypt/live/loitools.com/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/loitools.com/privkey.pem;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
       	index index.html index.php;
       	
		location / {
			#Since you are using Nginx as your web-server, please configure the following rewrite rules in case you get 404 Not Found errors for your sitemap:
			# TO USE STATIC SITEMAP -> DISABLE THOSE LINES
			# TO USE DYNAMIC SITEMAP -> ENABLE THOSE LINES
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
			#rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;
			
               	#try_files $uri $uri/ =404;
				try_files $uri $uri/ /index.php?q=$uri&$args;
       	}
		   
		location ~ \.php$ {
        	set $skip_cache 0;

			# Block some bot
			if ($http_user_agent ~* (serpstatbot|SemrushBot|AhrefsBot|MJ12bot|Crawler|Spider|CrawlDaddy|Java|WinHttp|HttpClient|urllib|Clickagy|SeznamBot|coccocbot|DotBot|proximic|FunWebProducts|AwarioSmartBot)) {
				return 304;
			}
			# Block login.php from outside-------
			set $isLoggingin 0;
			set $isUACorrect 0;
			#if ($request_uri ~* "/wp-login.php|/wp-admin|/wp-config.php|/*.php$|/*.sql$") {
			if ($request_uri ~* "/*.php$|/*.sql$|/wp-admin/|wp-.*.php") {
				set $isLoggingin 1;
			}
			#if ($http_user_agent !~* (LOI) ) {
			if ($http_user_agent !~* (Python-xmlrpc|Chrome/) ) {
				set $isUACorrect "${isLoggingin}0";
			}
			if ($isUACorrect = 10 ) {
				return 404;
			}
			# Prevent xmlrpc---------------------
			#set $isXMLRPCPosting 0;
			#set $isXMLRPCChecked 0;
			#if ($request_uri ~* "/xmlrpc.php") {
			#	set $isXMLRPCPosting 1;
			#}
			#if ($http_user_agent !~* (Python-xmlrpc) ) {
			#	set $isXMLRPCChecked "${isXMLRPCPosting}0";
			#}
			#if ($isXMLRPCChecked = 10 ) {
			#	return 404;
			#}

			# Not allow tag here
			if ($request_uri ~* "/tag/") {
				# set $skip_cache 0;
				return 404;
			}

			if ($request_method = POST) {
				set $skip_cache 1;
			}
			# The tilde instructs nginx to perform a case-sensitive regular expression match, instead of a straight string comparison
			if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl|rss)|/ads.txt|/ip-address/") {
				set $skip_cache 1;
			}
			if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
				set $skip_cache 1;
			}
			#End of Nginx FastCGI Cache Configuration
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			include snippets/fastcgi-php.conf;
    	}

    	location ~ /\.ht {
        	deny all;
    	}

		location = /favicon.ico {
			try_files $uri =404;
			log_not_found off;
			access_log off;
		}

		# Cache static files for as long as possible
    	location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        	expires max;
        	log_not_found off;
        	access_log off;
    	}
		
		# Processing sitemap.xml
    	
}
##########################################################################################################---9---itool.casa
server {
		# remove HTTP2 due to bug
    	listen 443 ssl;
       	listen [::]:443 ssl;
		#listen 80;
		#listen [::]:80;

	   #Apply limit
	   limit_req zone=mylimit burst=20 nodelay;

       server_name itool.casa www.itool.casa;
       root /var/www/html/itool.casa;
		#keepalive_timeout   70;
		ssl_certificate     /etc/letsencrypt/live/itool.casa/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/itool.casa/privkey.pem;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
       	index index.html index.php;
       	
		location / {
			#Since you are using Nginx as your web-server, please configure the following rewrite rules in case you get 404 Not Found errors for your sitemap:
			# TO USE STATIC SITEMAP -> DISABLE THOSE LINES
			# TO USE DYNAMIC SITEMAP -> ENABLE THOSE LINES
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;
			
               	#try_files $uri $uri/ =404;
				try_files $uri $uri/ /index.php?q=$uri&$args;
       	}
		   
		location ~ \.php$ {
        	set $skip_cache 0;

			# Block some bot
			if ($http_user_agent ~* (serpstatbot|SemrushBot|AhrefsBot|MJ12bot|Crawler|Spider|CrawlDaddy|Java|WinHttp|HttpClient|urllib|Clickagy|SeznamBot|coccocbot|DotBot|proximic|FunWebProducts|AwarioSmartBot)) {
				return 304;
			}
			# Block login.php from outside-------
			set $isLoggingin 0;
			set $isUACorrect 0;
			#if ($request_uri ~* "/wp-login.php|/wp-admin|/wp-config.php|/*.php$|/*.sql$") {
			if ($request_uri ~* "/*.php$|/*.sql$|/wp-admin/|wp-.*.php") {
				set $isLoggingin 1;
			}
			#if ($http_user_agent !~* (LOI) ) {
			if ($http_user_agent !~* (Python-xmlrpc|Chrome/) ) {
				set $isUACorrect "${isLoggingin}0";
			}
			if ($isUACorrect = 10 ) {
				return 404;
			}
			# Prevent xmlrpc---------------------
			#set $isXMLRPCPosting 0;
			#set $isXMLRPCChecked 0;
			#if ($request_uri ~* "/xmlrpc.php") {
			#	set $isXMLRPCPosting 1;
			#}
			#if ($http_user_agent !~* (Python-xmlrpc) ) {
			#	set $isXMLRPCChecked "${isXMLRPCPosting}0";
			#}
			#if ($isXMLRPCChecked = 10 ) {
			#	return 404;
			#}

			# Not allow tag here
			if ($request_uri ~* "/tag/") {
				# set $skip_cache 0;
				return 404;
			}

			if ($request_method = POST) {
				set $skip_cache 1;
			}
			# The tilde instructs nginx to perform a case-sensitive regular expression match, instead of a straight string comparison
			if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl|rss)|/ads.txt|/ip-address/") {
				set $skip_cache 1;
			}
			if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
				set $skip_cache 1;
			}
			#End of Nginx FastCGI Cache Configuration
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			include snippets/fastcgi-php.conf;
    	}

    	location ~ /\.ht {
        	deny all;
    	}

		location = /favicon.ico {
			try_files $uri =404;
			log_not_found off;
			access_log off;
		}

		# Cache static files for as long as possible
    	location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        	expires max;
        	log_not_found off;
        	access_log off;
    	}
		
		# Processing sitemap.xml
    	
}
##########################################################################################################---10---ibook.casa
server {
		# remove HTTP2 due to bug
    	listen 443 ssl;
       	listen [::]:443 ssl;
		#listen 80;
		#listen [::]:80;

	   #Apply limit
	   limit_req zone=mylimit burst=20 nodelay;

       server_name ibook.casa www.ibook.casa;
       root /var/www/html/ibook.casa;
		#keepalive_timeout   70;
		ssl_certificate     /etc/letsencrypt/live/ibook.casa/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/ibook.casa/privkey.pem;
    	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    	ssl_ciphers         HIGH:!aNULL:!MD5;
       	index index.html index.php;
       	
		location / {
			#Since you are using Nginx as your web-server, please configure the following rewrite rules in case you get 404 Not Found errors for your sitemap:
			# TO USE STATIC SITEMAP -> DISABLE THOSE LINES
			# TO USE DYNAMIC SITEMAP -> ENABLE THOSE LINES
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
			rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;
			
               	#try_files $uri $uri/ =404;
				try_files $uri $uri/ /index.php?q=$uri&$args;
       	}
		   
		location ~ \.php$ {
        	set $skip_cache 0;

			# Block some bot
			if ($http_user_agent ~* (serpstatbot|SemrushBot|AhrefsBot|MJ12bot|Crawler|Spider|CrawlDaddy|Java|WinHttp|HttpClient|urllib|Clickagy|SeznamBot|coccocbot|DotBot|proximic|FunWebProducts|AwarioSmartBot)) {
				return 304;
			}
			# Block login.php from outside-------
			set $isLoggingin 0;
			set $isUACorrect 0;
			#if ($request_uri ~* "/wp-login.php|/wp-admin|/wp-config.php|/*.php$|/*.sql$") {
			if ($request_uri ~* "/*.php$|/*.sql$|/wp-admin/|wp-.*.php") {
				set $isLoggingin 1;
			}
			#if ($http_user_agent !~* (LOI) ) {
			if ($http_user_agent !~* (Python-xmlrpc|Chrome/) ) {
				set $isUACorrect "${isLoggingin}0";
			}
			if ($isUACorrect = 10 ) {
				return 404;
			}
			# Prevent xmlrpc---------------------
			#set $isXMLRPCPosting 0;
			#set $isXMLRPCChecked 0;
			#if ($request_uri ~* "/xmlrpc.php") {
			#	set $isXMLRPCPosting 1;
			#}
			#if ($http_user_agent !~* (Python-xmlrpc) ) {
			#	set $isXMLRPCChecked "${isXMLRPCPosting}0";
			#}
			#if ($isXMLRPCChecked = 10 ) {
			#	return 404;
			#}

			# Not allow tag here
			if ($request_uri ~* "/tag/") {
				# set $skip_cache 0;
				return 404;
			}

			if ($request_method = POST) {
				set $skip_cache 1;
			}
			# The tilde instructs nginx to perform a case-sensitive regular expression match, instead of a straight string comparison
			if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|^/feed/*|/tag/.*/feed/*|index.php|/.*sitemap.*\.(xml|xsl|rss)|/ads.txt|/ip-address/") {
				set $skip_cache 1;
			}
			if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
				set $skip_cache 1;
			}
			#End of Nginx FastCGI Cache Configuration
			fastcgi_pass unix:/run/php/php7.3-fpm.sock;
			include snippets/fastcgi-php.conf;
    	}

    	location ~ /\.ht {
        	deny all;
    	}

		location = /favicon.ico {
			try_files $uri =404;
			log_not_found off;
			access_log off;
		}

		# Cache static files for as long as possible
    	location ~*.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        	expires max;
        	log_not_found off;
        	access_log off;
    	}
		
		# Processing sitemap.xml
    	
}
#==============================================================================>MYSQL PROXY PASS
